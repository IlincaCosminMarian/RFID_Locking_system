// RFID_Locking_system

#include <SPI.h> #include <RFID.h> #include <Servo.h>

RFID rfid(10, 9);


unsigned char status;

unsigned char str[MAX_LEN];

String accessGranted [2] = {"211311812113", "08589131515"};

int accessGrantedSize = 2;

Servo lockServo;

int lockPos = 15;

int unlockPos = 130;

boolean locked = true;

int redLEDPin = 5;

int greenLEDPin = 6;

void setup() {

Serial.begin(9600); //Serial monitor is only required to get tag ID numbers and for troubleshooting

SPI.begin(); //Start SPI communication with reader

rfid.init(); //initialization

pinMode(redLEDPin, OUTPUT); //LED startup sequence

pinMode(greenLEDPin, OUTPUT);

digitalWrite(redLEDPin, HIGH);

delay(200);

digitalWrite(greenLEDPin, HIGH);

delay(200);

digitalWrite(redLEDPin, LOW);

delay(200);

digitalWrite(greenLEDPin, LOW);

lockServo.attach(3);

lockServo.write(lockPos);

Serial.println("Place card/tag near reader..."); }

void loop() { if (rfid.findCard(PICC_REQIDL, str) == MI_OK) //asteptare ca tag ul sa fie introdus {

Serial.println("Card found");

String temp = ""; //stocheaza temporar tag ul

if (rfid.anticoll(str) == MI_OK) //Anti-collision detection, read tag serial number

{

Serial.print("The card's ID number is : ");

for (int i = 0; i < 4; i++) //afisare id ul tagului

{

temp = temp + (0x0F & (str[i] >> 4));

temp = temp + (0x0F & str[i]);

}

Serial.println (temp);

checkAccess (temp);

}

rfid.selectTag(str); //sa nu citesca in continuu tag ul

}

rfid.halt();

}

void checkAccess (String temp)

{

boolean granted = false;

for (int i=0; i <= (accessGrantedSize-1); i++)

{

if(accessGranted[i] == temp)

{

Serial.println ("Acces permis");

granted = true;

if (locked == true)

{

lockServo.write(unlockPos);

locked = false;

// delay(5000);

//lockServo.write(lockPos);

}

else if (locked == false)

{

lockServo.write(lockPos);

locked = true;

}

digitalWrite(greenLEDPin, HIGH);

delay(200);

digitalWrite(greenLEDPin, LOW);

delay(200);

digitalWrite(greenLEDPin, HIGH);

delay(200);

digitalWrite(greenLEDPin, LOW);

delay(200);

}

} if (granted == false)

{

Serial.println ("Acces nepermis");

for(int j=0;j<=20;j++)

{

digitalWrite(redLEDPin, HIGH);

delay(100);

digitalWrite(redLEDPin, LOW);

delay(100);

digitalWrite(redLEDPin, HIGH);

delay(100);

digitalWrite(redLEDPin, LOW);

delay(100);

j++;

}

} }
